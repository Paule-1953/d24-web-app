apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app-deployment
  namespace: default
  labels:
    app: web-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-app
  template:
    metadata:
      # annotations:
      #   prometheus.io/scrape: "true"
      #   prometheus.io/path: "/metrics"
      #   prometheus.io/port: "9100"
      labels:
        app: web-app
    spec:
      containers:
      - name: web-app
        image: pschnurbus24/web-app:0.4
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "200m"
            memory: "256M"
          limits:
            cpu: "400m"
            memory: "512M"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      # - name: node-exporter
      #   image: prom/node-exporter:latest
      #   ports:
      #   - containerPort: 9100
      #   resources:
      #     requests:
      #       cpu: "50m"
      #       memory: "64M"
      #     limits:
      #       cpu: "100m"
      #       memory: "128M"
---
apiVersion: v1
kind: Service
metadata:
  name: web-app-service
  namespace: default
  labels:
    app: web-app
spec:
  selector:
    app: web-app
  ports:
    #- name: web-app 
    - protocol: TCP
      port: 8080
      targetPort: 8080
    # - name: node-exporter
    #   protocol: TCP
    #   port: 9100
    #   targetPort: 9100
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-app-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web-app-service
            port:
              number: 8080
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: web-app-hpa
  namespace: default
  labels:
    app: web-app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: web-app-deployment
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
---
apiVersion: v1
kind: Pod
metadata:
  name: load-generator
  namespace: default
spec:
  containers:
  - name: load-generator
    image: busybox:1.28
    command: ["/bin/sh", "-c", "while sleep 0.01; do wget -q -O- http://34.159.86.5/; done"]
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "200m"
        memory: "256Mi"
  restartPolicy: Never